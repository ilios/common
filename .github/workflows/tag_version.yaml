name: Tag Version

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Semver Release Type (major,minor,patch)'
        required: true

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          token: ${{ secrets.ZORGBORT_TOKEN }}
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: pnpm
    - name: Validate releaseType
      run: npx in-string-list ${{ github.event.inputs.releaseType }} major,minor,patch
    - name: Setup Git
      run: |
        git config user.name Zorgbort
        git config user.email info@iliosproject.org
    - name: Get current versionn
      working-directory: ./packages/ilios-common
      run: |
        CURRENT_VERSION=`node -p "require('./packages/ilios-common/package.json').version"`
        echo ${CURRENT_VERSION}
        echo "current_version=${CURRENT_VERSION}" >> $GITHUB_ENV
    - name: Create new version
      run: |
        NEW_VERSION=$(npx semver --increment ${{ github.event.inputs.releaseType }} ${{env.current_version}})
        echo ${NEW_VERSION}
        echo "new_version=${NEW_VERSION}" >> $GITHUB_ENV
    - name: Extract version parts
      run: |
        MAJOR_VERSION=$(echo env.new_version | sed -rn 's#^refs/tags/(v3)\.([0-9]+)\.([0-9]+)$#\1#p')
        echo ${MAJOR_VERSION}
        echo "major_version=${MAJOR_VERSION}" >> $GITHUB_ENV
        MINOR_VERSION=$(echo env.new_version | sed -rn 's#^refs/tags/(v3)\.([0-9]+)\.([0-9]+)$#\1.\2#p')
        echo ${MINOR_VERSION}
        echo "minor_version=${MINOR_VERSION}" >> $GITHUB_ENV
        PATCH_VERSION=$(echo env.new_version | sed -rn 's#^refs/tags/(v3)\.([0-9]+)\.([0-9]+)$#\1.\2.\3#p')
        echo ${PATCH_VERSION}
        echo "patch_version=${PATCH_VERSION}" >> $GITHUB_ENV
    - name: Set version
      working-directory: ./packages/ilios-common
      run: npx update-version --major ${{env.major_version}} --minor ${{env.minor_version}} --patch ${{env.patch_version}}
    - name: Tag Version
      run: |
        git commit -a -m "${{env.new_version}}"
        git tag ${{env.new_version}} -m "Tagging the ${{env.new_version}} ${{ github.event.inputs.releaseType }} release"
    - name: Push Changes
      run: git push --follow-tags
